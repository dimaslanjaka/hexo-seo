"use strict";
module.exports = TreeLog;
function TreeLog() {
}
TreeLog.ascii = {
    intersection: "+",
    through: "-",
    branchUp: "+",
    branchDown: "+",
    fromBelow: ".",
    fromAbove: "'",
    fromBoth: "+",
    strafe: "|"
};
TreeLog.unicodeRound = {
    intersection: "\u254b",
    through: "\u2501",
    branchUp: "\u253b",
    branchDown: "\u2533",
    fromBelow: "\u256d",
    fromAbove: "\u2570",
    fromBoth: "\u2523",
    strafe: "\u2503"
};
TreeLog.unicodeSharp = {
    intersection: "\u254b",
    through: "\u2501",
    branchUp: "\u253b",
    branchDown: "\u2533",
    fromBelow: "\u250f",
    fromAbove: "\u2517",
    fromBoth: "\u2523",
    strafe: "\u2503"
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1sb2cuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL2pzLXByb3RvdHlwZXMvcGFja2FnZXMvY29sbGVjdGlvbnMvdHJlZS1sb2cuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxDQUFDO0FBRWIsTUFBTSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7QUFFekIsU0FBUyxPQUFPO0FBQ2hCLENBQUM7QUFFRCxPQUFPLENBQUMsS0FBSyxHQUFHO0lBQ1osWUFBWSxFQUFFLEdBQUc7SUFDakIsT0FBTyxFQUFFLEdBQUc7SUFDWixRQUFRLEVBQUUsR0FBRztJQUNiLFVBQVUsRUFBRSxHQUFHO0lBQ2YsU0FBUyxFQUFFLEdBQUc7SUFDZCxTQUFTLEVBQUUsR0FBRztJQUNkLFFBQVEsRUFBRSxHQUFHO0lBQ2IsTUFBTSxFQUFFLEdBQUc7Q0FDZCxDQUFDO0FBRUYsT0FBTyxDQUFDLFlBQVksR0FBRztJQUNuQixZQUFZLEVBQUUsUUFBUTtJQUN0QixPQUFPLEVBQUUsUUFBUTtJQUNqQixRQUFRLEVBQUUsUUFBUTtJQUNsQixVQUFVLEVBQUUsUUFBUTtJQUNwQixTQUFTLEVBQUUsUUFBUTtJQUNuQixTQUFTLEVBQUUsUUFBUTtJQUNuQixRQUFRLEVBQUUsUUFBUTtJQUNsQixNQUFNLEVBQUUsUUFBUTtDQUNuQixDQUFDO0FBRUYsT0FBTyxDQUFDLFlBQVksR0FBRztJQUNuQixZQUFZLEVBQUUsUUFBUTtJQUN0QixPQUFPLEVBQUUsUUFBUTtJQUNqQixRQUFRLEVBQUUsUUFBUTtJQUNsQixVQUFVLEVBQUUsUUFBUTtJQUNwQixTQUFTLEVBQUUsUUFBUTtJQUNuQixTQUFTLEVBQUUsUUFBUTtJQUNuQixRQUFRLEVBQUUsUUFBUTtJQUNsQixNQUFNLEVBQUUsUUFBUTtDQUNuQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gVHJlZUxvZztcblxuZnVuY3Rpb24gVHJlZUxvZygpIHtcbn1cblxuVHJlZUxvZy5hc2NpaSA9IHtcbiAgICBpbnRlcnNlY3Rpb246IFwiK1wiLFxuICAgIHRocm91Z2g6IFwiLVwiLFxuICAgIGJyYW5jaFVwOiBcIitcIixcbiAgICBicmFuY2hEb3duOiBcIitcIixcbiAgICBmcm9tQmVsb3c6IFwiLlwiLFxuICAgIGZyb21BYm92ZTogXCInXCIsXG4gICAgZnJvbUJvdGg6IFwiK1wiLFxuICAgIHN0cmFmZTogXCJ8XCJcbn07XG5cblRyZWVMb2cudW5pY29kZVJvdW5kID0ge1xuICAgIGludGVyc2VjdGlvbjogXCJcXHUyNTRiXCIsXG4gICAgdGhyb3VnaDogXCJcXHUyNTAxXCIsXG4gICAgYnJhbmNoVXA6IFwiXFx1MjUzYlwiLFxuICAgIGJyYW5jaERvd246IFwiXFx1MjUzM1wiLFxuICAgIGZyb21CZWxvdzogXCJcXHUyNTZkXCIsIC8vIHJvdW5kIGNvcm5lclxuICAgIGZyb21BYm92ZTogXCJcXHUyNTcwXCIsIC8vIHJvdW5kIGNvcm5lclxuICAgIGZyb21Cb3RoOiBcIlxcdTI1MjNcIixcbiAgICBzdHJhZmU6IFwiXFx1MjUwM1wiXG59O1xuXG5UcmVlTG9nLnVuaWNvZGVTaGFycCA9IHtcbiAgICBpbnRlcnNlY3Rpb246IFwiXFx1MjU0YlwiLFxuICAgIHRocm91Z2g6IFwiXFx1MjUwMVwiLFxuICAgIGJyYW5jaFVwOiBcIlxcdTI1M2JcIixcbiAgICBicmFuY2hEb3duOiBcIlxcdTI1MzNcIixcbiAgICBmcm9tQmVsb3c6IFwiXFx1MjUwZlwiLCAvLyBzaGFycCBjb3JuZXJcbiAgICBmcm9tQWJvdmU6IFwiXFx1MjUxN1wiLCAvLyBzaGFycCBjb3JuZXJcbiAgICBmcm9tQm90aDogXCJcXHUyNTIzXCIsXG4gICAgc3RyYWZlOiBcIlxcdTI1MDNcIlxufTtcblxuIl19