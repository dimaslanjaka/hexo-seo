"use strict";
require("collections/shim-array");
describe("ArrayShim-spec", function () {
    describe("clone", function () {
        it("clones", function () {
            expect([1].clone()).toEqual([1]);
        });
        it("clones deeply", function () {
            var array = [[1], [2], [3], {
                    a: 10,
                    b: 20,
                    c: [1, 2, 3]
                }];
            expect(array.clone()).toEqual(array);
        });
        it("clones cycles", function () {
            var array = [];
            array[0] = array;
            expect(array.clone()).toEqual(array);
        });
        it("clones sparse arrays", function () {
            expect([, ,].clone()).toEqual([, ,]);
        });
        it("clones sparse arrays quickly", function () {
            var start = Date.now();
            new Array(Math.pow(2, 30)).clone();
            expect(Date.now() - start < 100).toBe(true);
        });
        it("spliceOne remove", function () {
            var array = [1, 2, 3];
            array.spliceOne(1);
            expect(array).toEqual([1, 3]);
        });
        it("spliceOne add", function () {
            var array = [1, 2, 3];
            array.spliceOne(1, 2.5);
            expect(array).toEqual([1, 2.5, 3]);
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hpbS1hcnJheS1zcGVjLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9qcy1wcm90b3R5cGVzL3BhY2thZ2VzL2NvbGxlY3Rpb25zL3Rlc3Qvc3BlYy9zaGltLWFycmF5LXNwZWMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLE9BQU8sQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO0FBRWxDLFFBQVEsQ0FBQyxnQkFBZ0IsRUFBRTtJQUV2QixRQUFRLENBQUMsT0FBTyxFQUFFO1FBRWQsRUFBRSxDQUFDLFFBQVEsRUFBRTtZQUNULE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNyQyxDQUFDLENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQyxlQUFlLEVBQUU7WUFDaEIsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRTtvQkFDeEIsQ0FBQyxFQUFFLEVBQUU7b0JBQ0wsQ0FBQyxFQUFFLEVBQUU7b0JBQ0wsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7aUJBQ2YsQ0FBQyxDQUFDO1lBQ0gsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN6QyxDQUFDLENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQyxlQUFlLEVBQUU7WUFDaEIsSUFBSSxLQUFLLEdBQUcsRUFBRSxDQUFDO1lBQ2YsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQztZQUNqQixNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3pDLENBQUMsQ0FBQyxDQUFDO1FBRUgsRUFBRSxDQUFDLHNCQUFzQixFQUFFO1lBQ3ZCLE1BQU0sQ0FBQyxDQUFDLEVBQUMsRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBQyxFQUFFLENBQUMsQ0FBQztRQUN2QyxDQUFDLENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQyw4QkFBOEIsRUFBRTtZQUMvQixJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7WUFDdkIsSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUNuQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLEtBQUssR0FBRyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDaEQsQ0FBQyxDQUFDLENBQUM7UUFFSCxFQUFFLENBQUMsa0JBQWtCLEVBQUU7WUFDbkIsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ3RCLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbkIsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2xDLENBQUMsQ0FBQyxDQUFDO1FBRUgsRUFBRSxDQUFDLGVBQWUsRUFBRTtZQUNoQixJQUFJLEtBQUssR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDdEIsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFDeEIsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN2QyxDQUFDLENBQUMsQ0FBQztJQUVQLENBQUMsQ0FBQyxDQUFDO0FBRVAsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcbnJlcXVpcmUoXCJjb2xsZWN0aW9ucy9zaGltLWFycmF5XCIpO1xuXG5kZXNjcmliZShcIkFycmF5U2hpbS1zcGVjXCIsIGZ1bmN0aW9uICgpIHtcblxuICAgIGRlc2NyaWJlKFwiY2xvbmVcIiwgZnVuY3Rpb24gKCkge1xuXG4gICAgICAgIGl0KFwiY2xvbmVzXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGV4cGVjdChbMV0uY2xvbmUoKSkudG9FcXVhbChbMV0pO1xuICAgICAgICB9KTtcblxuICAgICAgICBpdChcImNsb25lcyBkZWVwbHlcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGFycmF5ID0gW1sxXSwgWzJdLCBbM10sIHtcbiAgICAgICAgICAgICAgICBhOiAxMCxcbiAgICAgICAgICAgICAgICBiOiAyMCxcbiAgICAgICAgICAgICAgICBjOiBbMSwgMiwgM11cbiAgICAgICAgICAgIH1dO1xuICAgICAgICAgICAgZXhwZWN0KGFycmF5LmNsb25lKCkpLnRvRXF1YWwoYXJyYXkpO1xuICAgICAgICB9KTtcblxuICAgICAgICBpdChcImNsb25lcyBjeWNsZXNcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGFycmF5ID0gW107XG4gICAgICAgICAgICBhcnJheVswXSA9IGFycmF5O1xuICAgICAgICAgICAgZXhwZWN0KGFycmF5LmNsb25lKCkpLnRvRXF1YWwoYXJyYXkpO1xuICAgICAgICB9KTtcblxuICAgICAgICBpdChcImNsb25lcyBzcGFyc2UgYXJyYXlzXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGV4cGVjdChbLCxdLmNsb25lKCkpLnRvRXF1YWwoWywsXSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGl0KFwiY2xvbmVzIHNwYXJzZSBhcnJheXMgcXVpY2tseVwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgc3RhcnQgPSBEYXRlLm5vdygpO1xuICAgICAgICAgICAgbmV3IEFycmF5KE1hdGgucG93KDIsIDMwKSkuY2xvbmUoKTtcbiAgICAgICAgICAgIGV4cGVjdChEYXRlLm5vdygpIC0gc3RhcnQgPCAxMDApLnRvQmUodHJ1ZSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGl0KFwic3BsaWNlT25lIHJlbW92ZVwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgYXJyYXkgPSBbMSwgMiwgM107XG4gICAgICAgICAgICBhcnJheS5zcGxpY2VPbmUoMSk7XG4gICAgICAgICAgICBleHBlY3QoYXJyYXkpLnRvRXF1YWwoWzEsIDNdKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaXQoXCJzcGxpY2VPbmUgYWRkXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBhcnJheSA9IFsxLCAyLCAzXTtcbiAgICAgICAgICAgIGFycmF5LnNwbGljZU9uZSgxLCAyLjUpO1xuICAgICAgICAgICAgZXhwZWN0KGFycmF5KS50b0VxdWFsKFsxLCAyLjUsIDNdKTtcbiAgICAgICAgfSk7XG5cbiAgICB9KTtcblxufSk7XG4iXX0=