"use strict";
require("collections/shim-regexp");
describe("RegExp-spec", function () {
    describe("escape", function () {
        [
            "{",
            "a-b",
            "...",
            "\\x",
            "[a-b]",
            "^foo$",
            ".?",
            "()",
            "1..3",
            "[^a-z]"
        ].forEach(function (input) {
            it("should escape " + JSON.stringify(input), function () {
                var re = new RegExp("^" + RegExp.escape(input) + "$");
                expect(re.test(input)).toBe(true);
            });
            it("should escape case-insensitively " + JSON.stringify(input), function () {
                var re = new RegExp("^" + RegExp.escape(input) + "$", "i");
                expect(re.test(input.toUpperCase())).toBe(true);
            });
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVnZXhwLXNwZWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL2pzLXByb3RvdHlwZXMvcGFja2FnZXMvY29sbGVjdGlvbnMvdGVzdC9zcGVjL3JlZ2V4cC1zcGVjLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxPQUFPLENBQUMseUJBQXlCLENBQUMsQ0FBQztBQUVuQyxRQUFRLENBQUMsYUFBYSxFQUFFO0lBQ3BCLFFBQVEsQ0FBQyxRQUFRLEVBQUU7UUFFZjtZQUNJLEdBQUc7WUFDSCxLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7WUFDTCxPQUFPO1lBQ1AsT0FBTztZQUNQLElBQUk7WUFDSixJQUFJO1lBQ0osTUFBTTtZQUNOLFFBQVE7U0FDWCxDQUFDLE9BQU8sQ0FBQyxVQUFVLEtBQUs7WUFFckIsRUFBRSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLEVBQUU7Z0JBQ3pDLElBQUksRUFBRSxHQUFHLElBQUksTUFBTSxDQUFDLEdBQUcsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO2dCQUN0RCxNQUFNLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN0QyxDQUFDLENBQUMsQ0FBQztZQUVILEVBQUUsQ0FBQyxtQ0FBbUMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxFQUFFO2dCQUM1RCxJQUFJLEVBQUUsR0FBRyxJQUFJLE1BQU0sQ0FBQyxHQUFHLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQzNELE1BQU0sQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3BELENBQUMsQ0FBQyxDQUFDO1FBRVAsQ0FBQyxDQUFDLENBQUM7SUFFUCxDQUFDLENBQUMsQ0FBQztBQUNQLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG5yZXF1aXJlKFwiY29sbGVjdGlvbnMvc2hpbS1yZWdleHBcIik7XG5cbmRlc2NyaWJlKFwiUmVnRXhwLXNwZWNcIiwgZnVuY3Rpb24gKCkge1xuICAgIGRlc2NyaWJlKFwiZXNjYXBlXCIsIGZ1bmN0aW9uICgpIHtcblxuICAgICAgICBbXG4gICAgICAgICAgICBcIntcIixcbiAgICAgICAgICAgIFwiYS1iXCIsXG4gICAgICAgICAgICBcIi4uLlwiLFxuICAgICAgICAgICAgXCJcXFxceFwiLFxuICAgICAgICAgICAgXCJbYS1iXVwiLFxuICAgICAgICAgICAgXCJeZm9vJFwiLFxuICAgICAgICAgICAgXCIuP1wiLFxuICAgICAgICAgICAgXCIoKVwiLFxuICAgICAgICAgICAgXCIxLi4zXCIsXG4gICAgICAgICAgICBcIlteYS16XVwiXG4gICAgICAgIF0uZm9yRWFjaChmdW5jdGlvbiAoaW5wdXQpIHtcblxuICAgICAgICAgICAgaXQoXCJzaG91bGQgZXNjYXBlIFwiICsgSlNPTi5zdHJpbmdpZnkoaW5wdXQpLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJlID0gbmV3IFJlZ0V4cChcIl5cIiArIFJlZ0V4cC5lc2NhcGUoaW5wdXQpICsgXCIkXCIpO1xuICAgICAgICAgICAgICAgIGV4cGVjdChyZS50ZXN0KGlucHV0KSkudG9CZSh0cnVlKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBpdChcInNob3VsZCBlc2NhcGUgY2FzZS1pbnNlbnNpdGl2ZWx5IFwiICsgSlNPTi5zdHJpbmdpZnkoaW5wdXQpLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJlID0gbmV3IFJlZ0V4cChcIl5cIiArIFJlZ0V4cC5lc2NhcGUoaW5wdXQpICsgXCIkXCIsIFwiaVwiKTtcbiAgICAgICAgICAgICAgICBleHBlY3QocmUudGVzdChpbnB1dC50b1VwcGVyQ2FzZSgpKSkudG9CZSh0cnVlKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIH0pO1xuXG4gICAgfSk7XG59KTtcblxuIl19