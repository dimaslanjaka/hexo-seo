"use strict";
var Set = require("collections/set");
var Map = require("collections/map");
describe("Clone-spec", function () {
    it("should deeply clone custom collections", function () {
        var a = new Set([new Map([["a", {}]])]);
        var b = Object.clone(a);
        // equal maps are not consistently hashed
        expect(Object.equals(a, b)).toBe(false);
        expect(a.equals(b)).toBe(false);
        expect(a.one()).not.toBe(b.one());
        expect(a.one().equals(b.one())).toBe(true);
        expect(a.one().get('a')).not.toBe(b.one().get('a'));
        expect(a.one().get('a')).toEqual(b.one().get('a'));
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xvbmUtc3BlYy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvanMtcHJvdG90eXBlcy9wYWNrYWdlcy9jb2xsZWN0aW9ucy90ZXN0L3NwZWMvY2xvbmUtc3BlYy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsSUFBSSxHQUFHLEdBQUcsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUM7QUFDckMsSUFBSSxHQUFHLEdBQUcsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUM7QUFFckMsUUFBUSxDQUFDLFlBQVksRUFBRTtJQUVuQixFQUFFLENBQUMsd0NBQXdDLEVBQUU7UUFDekMsSUFBSSxDQUFDLEdBQUcsSUFBSSxHQUFHLENBQUMsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUV4Qix5Q0FBeUM7UUFDekMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3hDLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRWhDLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQ2xDLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzNDLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDcEQsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ3ZELENBQUMsQ0FBQyxDQUFDO0FBRVAsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcbnZhciBTZXQgPSByZXF1aXJlKFwiY29sbGVjdGlvbnMvc2V0XCIpO1xudmFyIE1hcCA9IHJlcXVpcmUoXCJjb2xsZWN0aW9ucy9tYXBcIik7XG5cbmRlc2NyaWJlKFwiQ2xvbmUtc3BlY1wiLCBmdW5jdGlvbiAoKSB7XG5cbiAgICBpdChcInNob3VsZCBkZWVwbHkgY2xvbmUgY3VzdG9tIGNvbGxlY3Rpb25zXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGEgPSBuZXcgU2V0KFtuZXcgTWFwKFtbXCJhXCIse31dXSldKTtcbiAgICAgICAgdmFyIGIgPSBPYmplY3QuY2xvbmUoYSk7XG5cbiAgICAgICAgLy8gZXF1YWwgbWFwcyBhcmUgbm90IGNvbnNpc3RlbnRseSBoYXNoZWRcbiAgICAgICAgZXhwZWN0KE9iamVjdC5lcXVhbHMoYSwgYikpLnRvQmUoZmFsc2UpO1xuICAgICAgICBleHBlY3QoYS5lcXVhbHMoYikpLnRvQmUoZmFsc2UpO1xuXG4gICAgICAgIGV4cGVjdChhLm9uZSgpKS5ub3QudG9CZShiLm9uZSgpKTtcbiAgICAgICAgZXhwZWN0KGEub25lKCkuZXF1YWxzKGIub25lKCkpKS50b0JlKHRydWUpO1xuICAgICAgICBleHBlY3QoYS5vbmUoKS5nZXQoJ2EnKSkubm90LnRvQmUoYi5vbmUoKS5nZXQoJ2EnKSk7XG4gICAgICAgIGV4cGVjdChhLm9uZSgpLmdldCgnYScpKS50b0VxdWFsKGIub25lKCkuZ2V0KCdhJykpO1xuICAgIH0pO1xuXG59KTtcbiJdfQ==