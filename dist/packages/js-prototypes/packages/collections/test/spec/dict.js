"use strict";
// tests that are equally applicable to Dict, Map, SortedMap, unbounded LruMap, FastMap
module.exports = describeDict;
function describeDict(Dict) {
    it("should be constructable from entry duples", function () {
        var dict = new Dict([['a', 10], ['b', 20]]);
        shouldHaveTheUsualContent(dict);
    });
    it("should be constructable from objects", function () {
        var dict = Dict.from({ a: 10, b: 20 });
        shouldHaveTheUsualContent(dict);
    });
    it("should be constructable from dicts", function () {
        var dict = new Dict(Dict.from({ a: 10, b: 20 }));
        shouldHaveTheUsualContent(dict);
    });
    describe("delete", function () {
        it("should be able to delete keys", function () {
            var dict = Dict.from({ a: 10, b: 20, c: 30 });
            expect(dict.delete('c')).toBe(true);
            expect(dict.delete('c')).toBe(false);
            shouldHaveTheUsualContent(dict);
        });
    });
    it("should be able to contain hasOwnProperty", function () {
        var dict = new Dict();
        dict.set("hasOwnProperty", 10);
        expect(dict.get("hasOwnProperty")).toBe(10);
        expect(dict.delete("hasOwnProperty")).toBe(true);
        expect(dict.length).toBe(0);
        expect(dict.delete("hasOwnProperty")).toBe(false);
    });
    it("should be able to contain __proto__", function () {
        var dict = new Dict();
        dict.set("__proto__", 10);
        expect(dict.get("__proto__")).toBe(10);
        expect(dict.delete("__proto__")).toBe(true);
        expect(dict.length).toBe(0);
        expect(dict.delete("__proto__")).toBe(false);
    });
    it("should send a value for MapChange events", function () {
        var dict = Dict.from({ a: 1 });
        var listener = function (value, key) {
            expect(value).toBe(2);
        };
        dict.addMapChangeListener(listener);
        dict.set('a', 2);
    });
}
function shouldHaveTheUsualContent(dict) {
    expect(dict.has('a')).toBe(true);
    expect(dict.has('b')).toBe(true);
    expect(dict.has('c')).toBe(false);
    expect(dict.has('__proto__')).toBe(false);
    expect(dict.has('hasOwnProperty')).toBe(false);
    expect(dict.get('a')).toBe(10);
    expect(dict.get('b')).toBe(20);
    expect(dict.get('c')).toBe(undefined);
    var mapIter = dict.keys(), key, keys = [];
    while (key = mapIter.next().value) {
        keys.push(key);
    }
    expect(dict.keysArray()).toEqual(['a', 'b']);
    expect(dict.valuesArray()).toEqual([10, 20]);
    expect(dict.entriesArray()).toEqual([['a', 10], ['b', 20]]);
    expect(dict.reduce(function (basis, value, key) {
        return basis + value;
    }, 0)).toEqual(30);
    expect(dict.reduce(function (basis, value, key) {
        basis.push(key);
        return basis;
    }, [])).toEqual(['a', 'b']);
    expect(dict.length).toBe(2);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGljdC5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvanMtcHJvdG90eXBlcy9wYWNrYWdlcy9jb2xsZWN0aW9ucy90ZXN0L3NwZWMvZGljdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsdUZBQXVGO0FBRXZGLE1BQU0sQ0FBQyxPQUFPLEdBQUcsWUFBWSxDQUFDO0FBQzlCLFNBQVMsWUFBWSxDQUFDLElBQUk7SUFFdEIsRUFBRSxDQUFDLDJDQUEyQyxFQUFFO1FBQzVDLElBQUksSUFBSSxHQUFHLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzVDLHlCQUF5QixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3BDLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLHNDQUFzQyxFQUFFO1FBQ3ZDLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUMsQ0FBQyxDQUFDO1FBQ3JDLHlCQUF5QixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3BDLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLG9DQUFvQyxFQUFFO1FBQ3JDLElBQUksSUFBSSxHQUFHLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUMsQ0FBQyxDQUFDLENBQUM7UUFDL0MseUJBQXlCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDcEMsQ0FBQyxDQUFDLENBQUM7SUFFSCxRQUFRLENBQUMsUUFBUSxFQUFFO1FBQ2YsRUFBRSxDQUFDLCtCQUErQixFQUFFO1lBQ2hDLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFB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QUFDLENBQUM7SUFDbEMsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDMUMsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUUvQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUMvQixNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUMvQixNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUV0QyxJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsSUFBSSxFQUFFLEVBQUUsR0FBRyxFQUFFLElBQUksR0FBRyxFQUFFLENBQUM7SUFDMUMsT0FBTyxHQUFHLEdBQUcsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRTtRQUMvQixJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0tBQ2xCO0lBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBRTdDLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUM3QyxNQUFNLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzVELE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsS0FBSyxFQUFFLEtBQUssRUFBRSxHQUFHO1FBQzFDLE9BQU8sS0FBSyxHQUFHLEtBQUssQ0FBQztJQUN6QixDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDbkIsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxLQUFLLEVBQUUsS0FBSyxFQUFFLEdBQUc7UUFDMUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNoQixPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUM1QixNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNoQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gdGVzdHMgdGhhdCBhcmUgZXF1YWxseSBhcHBsaWNhYmxlIHRvIERpY3QsIE1hcCwgU29ydGVkTWFwLCB1bmJvdW5kZWQgTHJ1TWFwLCBGYXN0TWFwXG5cbm1vZHVsZS5leHBvcnRzID0gZGVzY3JpYmVEaWN0O1xuZnVuY3Rpb24gZGVzY3JpYmVEaWN0KERpY3QpIHtcblxuICAgIGl0KFwic2hvdWxkIGJlIGNvbnN0cnVjdGFibGUgZnJvbSBlbnRyeSBkdXBsZXNcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZGljdCA9IG5ldyBEaWN0KFtbJ2EnLCAxMF0sIFsnYicsIDIwXV0pO1xuICAgICAgICBzaG91bGRIYXZlVGhlVXN1YWxDb250ZW50KGRpY3QpO1xuICAgIH0pO1xuXG4gICAgaXQoXCJzaG91bGQgYmUgY29uc3RydWN0YWJsZSBmcm9tIG9iamVjdHNcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZGljdCA9IERpY3QuZnJvbSh7YTogMTAsIGI6IDIwfSk7XG4gICAgICAgIHNob3VsZEhhdmVUaGVVc3VhbENvbnRlbnQoZGljdCk7XG4gICAgfSk7XG5cbiAgICBpdChcInNob3VsZCBiZSBjb25zdHJ1Y3RhYmxlIGZyb20gZGljdHNcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZGljdCA9IG5ldyBEaWN0KERpY3QuZnJvbSh7YTogMTAsIGI6IDIwfSkpO1xuICAgICAgICBzaG91bGRIYXZlVGhlVXN1YWxDb250ZW50KGRpY3QpO1xuICAgIH0pO1xuXG4gICAgZGVzY3JpYmUoXCJkZWxldGVcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICBpdChcInNob3VsZCBiZSBhYmxlIHRvIGRlbGV0ZSBrZXlzXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBkaWN0ID0gRGljdC5mcm9tKHthOiAxMCwgYjogMjAsIGM6IDMwfSk7XG4gICAgICAgICAgICBleHBlY3QoZGljdC5kZWxldGUoJ2MnKSkudG9CZSh0cnVlKTtcbiAgICAgICAgICAgIGV4cGVjdChkaWN0LmRlbGV0ZSgnYycpKS50b0JlKGZhbHNlKTtcbiAgICAgICAgICAgIHNob3VsZEhhdmVUaGVVc3VhbENvbnRlbnQoZGljdCk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgaXQoXCJzaG91bGQgYmUgYWJsZSB0byBjb250YWluIGhhc093blByb3BlcnR5XCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGRpY3QgPSBuZXcgRGljdCgpO1xuICAgICAgICBkaWN0LnNldChcImhhc093blByb3BlcnR5XCIsIDEwKTtcbiAgICAgICAgZXhwZWN0KGRpY3QuZ2V0KFwiaGFzT3duUHJvcGVydHlcIikpLnRvQmUoMTApO1xuICAgICAgICBleHBlY3QoZGljdC5kZWxldGUoXCJoYXNPd25Qcm9wZXJ0eVwiKSkudG9CZSh0cnVlKTtcbiAgICAgICAgZXhwZWN0KGRpY3QubGVuZ3RoKS50b0JlKDApO1xuICAgICAgICBleHBlY3QoZGljdC5kZWxldGUoXCJoYXNPd25Qcm9wZXJ0eVwiKSkudG9CZShmYWxzZSk7XG4gICAgfSk7XG5cbiAgICBpdChcInNob3VsZCBiZSBhYmxlIHRvIGNvbnRhaW4gX19wcm90b19fXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGRpY3QgPSBuZXcgRGljdCgpO1xuICAgICAgICBkaWN0LnNldChcIl9fcHJvdG9fX1wiLCAxMCk7XG4gICAgICAgIGV4cGVjdChkaWN0LmdldChcIl9fcHJvdG9fX1wiKSkudG9CZSgxMCk7XG4gICAgICAgIGV4cGVjdChkaWN0LmRlbGV0ZShcIl9fcHJvdG9fX1wiKSkudG9CZSh0cnVlKTtcbiAgICAgICAgZXhwZWN0KGRpY3QubGVuZ3RoKS50b0JlKDApO1xuICAgICAgICBleHBlY3QoZGljdC5kZWxldGUoXCJfX3Byb3RvX19cIikpLnRvQmUoZmFsc2UpO1xuICAgIH0pO1xuXG4gICAgaXQoXCJzaG91bGQgc2VuZCBhIHZhbHVlIGZvciBNYXBDaGFuZ2UgZXZlbnRzXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGRpY3QgPSBEaWN0LmZyb20oe2E6IDF9KTtcblxuICAgICAgICB2YXIgbGlzdGVuZXIgPSBmdW5jdGlvbih2YWx1ZSwga2V5KSB7XG4gICAgICAgICAgICBleHBlY3QodmFsdWUpLnRvQmUoMik7XG4gICAgICAgIH07XG4gICAgICAgIGRpY3QuYWRkTWFwQ2hhbmdlTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgICAgICBkaWN0LnNldCgnYScsIDIpO1xuICAgIH0pXG59XG5cbmZ1bmN0aW9uIHNob3VsZEhhdmVUaGVVc3VhbENvbnRlbnQoZGljdCkge1xuICAgIGV4cGVjdChkaWN0LmhhcygnYScpKS50b0JlKHRydWUpO1xuICAgIGV4cGVjdChkaWN0LmhhcygnYicpKS50b0JlKHRydWUpO1xuICAgIGV4cGVjdChkaWN0LmhhcygnYycpKS50b0JlKGZhbHNlKTtcbiAgICBleHBlY3QoZGljdC5oYXMoJ19fcHJvdG9fXycpKS50b0JlKGZhbHNlKTtcbiAgICBleHBlY3QoZGljdC5oYXMoJ2hhc093blByb3BlcnR5JykpLnRvQmUoZmFsc2UpO1xuXG4gICAgZXhwZWN0KGRpY3QuZ2V0KCdhJykpLnRvQmUoMTApO1xuICAgIGV4cGVjdChkaWN0LmdldCgnYicpKS50b0JlKDIwKTtcbiAgICBleHBlY3QoZGljdC5nZXQoJ2MnKSkudG9CZSh1bmRlZmluZWQpO1xuXG4gICAgdmFyIG1hcEl0ZXIgPSBkaWN0LmtleXMoKSwga2V5LCBrZXlzID0gW107XG4gICAgd2hpbGUgKGtleSA9IG1hcEl0ZXIubmV4dCgpLnZhbHVlKSB7XG4gICAgICAgIGtleXMucHVzaChrZXkpO1xuICAgIH1cbiAgICBleHBlY3QoZGljdC5rZXlzQXJyYXkoKSkudG9FcXVhbChbJ2EnLCAnYiddKTtcblxuICAgIGV4cGVjdChkaWN0LnZhbHVlc0FycmF5KCkpLnRvRXF1YWwoWzEwLCAyMF0pO1xuICAgIGV4cGVjdChkaWN0LmVudHJpZXNBcnJheSgpKS50b0VxdWFsKFtbJ2EnLCAxMF0sIFsnYicsIDIwXV0pO1xuICAgIGV4cGVjdChkaWN0LnJlZHVjZShmdW5jdGlvbiAoYmFzaXMsIHZhbHVlLCBrZXkpIHtcbiAgICAgICAgcmV0dXJuIGJhc2lzICsgdmFsdWU7XG4gICAgfSwgMCkpLnRvRXF1YWwoMzApO1xuICAgIGV4cGVjdChkaWN0LnJlZHVjZShmdW5jdGlvbiAoYmFzaXMsIHZhbHVlLCBrZXkpIHtcbiAgICAgICAgYmFzaXMucHVzaChrZXkpO1xuICAgICAgICByZXR1cm4gYmFzaXM7XG4gICAgfSwgW10pKS50b0VxdWFsKFsnYScsICdiJ10pO1xuICAgIGV4cGVjdChkaWN0Lmxlbmd0aCkudG9CZSgyKTtcbn1cbiJdfQ==