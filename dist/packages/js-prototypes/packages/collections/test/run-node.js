"use strict";
/*jshint node:true, browser:false */
var jasmineRequire = require('jasmine-core/lib/jasmine-core/jasmine.js');
var JasmineConsoleReporter = require('jasmine-console-reporter');
// Init
var jasmine = jasmineRequire.core(jasmineRequire);
var jasmineEnv = jasmine.getEnv();
// Export interface
var jasmineInterface = jasmineRequire.interface(jasmine, jasmineEnv);
global.jasmine = jasmine;
global.jasmineRequire = jasmineRequire;
for (var property in jasmineInterface) {
    if (jasmineInterface.hasOwnProperty(property)) {
        global[property] = jasmineInterface[property];
    }
}
// Default reporter
jasmineEnv.addReporter(jasmineInterface.jsApiReporter);
// Html reporter
var consoleReporter = new JasmineConsoleReporter({
    colors: 1,
    cleanStack: 1,
    verbosity: 4,
    listStyle: 'indent',
    activity: false
});
jasmineEnv.addReporter(consoleReporter);
// Exit code
var exitCode = 0;
jasmineEnv.addReporter({
    specDone: function (result) {
        exitCode = exitCode || result.status === 'failed';
    }
});
// Execute
var mrRequire = require('mr/bootstrap-node');
var PATH = require("path");
mrRequire.loadPackage(PATH.join(__dirname, ".")).then(function (mr) {
    return mr.async("all");
}).then(function () {
    console.log('Done');
    process.exit(exitCode);
}).thenReturn();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnVuLW5vZGUuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL2pzLXByb3RvdHlwZXMvcGFja2FnZXMvY29sbGVjdGlvbnMvdGVzdC9ydW4tbm9kZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsb0NBQW9DO0FBQ3BDLElBQUksY0FBYyxHQUFHLE9BQU8sQ0FBQywwQ0FBMEMsQ0FBQyxDQUFDO0FBQ3pFLElBQUksc0JBQXNCLEdBQUcsT0FBTyxDQUFDLDBCQUEwQixDQUFDLENBQUM7QUFFakUsT0FBTztBQUNQLElBQUksT0FBTyxHQUFHLGNBQWMsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7QUFDbEQsSUFBSSxVQUFVLEdBQUcsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBRWxDLG1CQUFtQjtBQUNuQixJQUFJLGdCQUFnQixHQUFHLGNBQWMsQ0FBQyxTQUFTLENBQUMsT0FBTyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0FBQ3JFLE1BQU0sQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO0FBQ3pCLE1BQU0sQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO0FBQ3ZDLEtBQUssSUFBSSxRQUFRLElBQUksZ0JBQWdCLEVBQUU7SUFDbkMsSUFBSSxnQkFBZ0IsQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLEVBQUU7UUFDNUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxHQUFHLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxDQUFDO0tBQ2hEO0NBQ0o7QUFFRCxtQkFBbUI7QUFDbkIsVUFBVSxDQUFDLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUV2RCxnQkFBZ0I7QUFDaEIsSUFBSSxlQUFlLEdBQUcsSUFBSSxzQkFBc0IsQ0FBQztJQUM3QyxNQUFNLEVBQUUsQ0FBQztJQUNULFVBQVUsRUFBRSxDQUFDO0lBQ2IsU0FBUyxFQUFFLENBQUM7SUFDWixTQUFTLEVBQUUsUUFBUTtJQUNuQixRQUFRLEVBQUUsS0FBSztDQUNsQixDQUFDLENBQUM7QUFDSCxVQUFVLENBQUMsV0FBVyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBRXhDLFlBQVk7QUFDWixJQUFJLFFBQVEsR0FBRyxDQUFDLENBQUM7QUFDakIsVUFBVSxDQUFDLFdBQVcsQ0FBQztJQUNuQixRQUFRLEVBQUUsVUFBUyxNQUFNO1FBQ3JCLFFBQVEsR0FBRyxRQUFRLElBQUksTUFBTSxDQUFDLE1BQU0sS0FBSyxRQUFRLENBQUM7SUFDdEQsQ0FBQztDQUNKLENBQUMsQ0FBQztBQUVILFVBQVU7QUFDVixJQUFJLFNBQVMsR0FBRyxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQztBQUM3QyxJQUFJLElBQUksR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDM0IsU0FBUyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUU7SUFDOUQsT0FBTyxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzNCLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUNKLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDcEIsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUMzQixDQUFDLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qanNoaW50IG5vZGU6dHJ1ZSwgYnJvd3NlcjpmYWxzZSAqL1xudmFyIGphc21pbmVSZXF1aXJlID0gcmVxdWlyZSgnamFzbWluZS1jb3JlL2xpYi9qYXNtaW5lLWNvcmUvamFzbWluZS5qcycpO1xudmFyIEphc21pbmVDb25zb2xlUmVwb3J0ZXIgPSByZXF1aXJlKCdqYXNtaW5lLWNvbnNvbGUtcmVwb3J0ZXInKTtcblxuLy8gSW5pdFxudmFyIGphc21pbmUgPSBqYXNtaW5lUmVxdWlyZS5jb3JlKGphc21pbmVSZXF1aXJlKTtcbnZhciBqYXNtaW5lRW52ID0gamFzbWluZS5nZXRFbnYoKTtcblxuLy8gRXhwb3J0IGludGVyZmFjZVxudmFyIGphc21pbmVJbnRlcmZhY2UgPSBqYXNtaW5lUmVxdWlyZS5pbnRlcmZhY2UoamFzbWluZSwgamFzbWluZUVudik7XG5nbG9iYWwuamFzbWluZSA9IGphc21pbmU7XG5nbG9iYWwuamFzbWluZVJlcXVpcmUgPSBqYXNtaW5lUmVxdWlyZTtcbmZvciAodmFyIHByb3BlcnR5IGluIGphc21pbmVJbnRlcmZhY2UpIHtcbiAgICBpZiAoamFzbWluZUludGVyZmFjZS5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkpIHtcbiAgICAgICBnbG9iYWxbcHJvcGVydHldID0gamFzbWluZUludGVyZmFjZVtwcm9wZXJ0eV07XG4gICAgfVxufVxuXG4vLyBEZWZhdWx0IHJlcG9ydGVyXG5qYXNtaW5lRW52LmFkZFJlcG9ydGVyKGphc21pbmVJbnRlcmZhY2UuanNBcGlSZXBvcnRlcik7XG5cbi8vIEh0bWwgcmVwb3J0ZXJcbnZhciBjb25zb2xlUmVwb3J0ZXIgPSBuZXcgSmFzbWluZUNvbnNvbGVSZXBvcnRlcih7XG4gICAgY29sb3JzOiAxLFxuICAgIGNsZWFuU3RhY2s6IDEsXG4gICAgdmVyYm9zaXR5OiA0LFxuICAgIGxpc3RTdHlsZTogJ2luZGVudCcsXG4gICAgYWN0aXZpdHk6IGZhbHNlXG59KTtcbmphc21pbmVFbnYuYWRkUmVwb3J0ZXIoY29uc29sZVJlcG9ydGVyKTtcblxuLy8gRXhpdCBjb2RlXG52YXIgZXhpdENvZGUgPSAwO1xuamFzbWluZUVudi5hZGRSZXBvcnRlcih7XG4gICAgc3BlY0RvbmU6IGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgICBleGl0Q29kZSA9IGV4aXRDb2RlIHx8IHJlc3VsdC5zdGF0dXMgPT09ICdmYWlsZWQnO1xuICAgIH1cbn0pO1xuXG4vLyBFeGVjdXRlXG52YXIgbXJSZXF1aXJlID0gcmVxdWlyZSgnbXIvYm9vdHN0cmFwLW5vZGUnKTtcbnZhciBQQVRIID0gcmVxdWlyZShcInBhdGhcIik7XG5tclJlcXVpcmUubG9hZFBhY2thZ2UoUEFUSC5qb2luKF9fZGlybmFtZSwgXCIuXCIpKS50aGVuKGZ1bmN0aW9uIChtcikge1xuICAgIHJldHVybiBtci5hc3luYyhcImFsbFwiKTtcbn0pLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgIGNvbnNvbGUubG9nKCdEb25lJyk7XG4gICAgcHJvY2Vzcy5leGl0KGV4aXRDb2RlKTtcbn0pLnRoZW5SZXR1cm4oKTtcblxuIl19