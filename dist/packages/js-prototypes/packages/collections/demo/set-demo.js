"use strict";
var Set = require("../set");
var Iterator = require("../iterator");
console.log("\nignore non-unique values");
var set = new Set([1, 1, 1, 2, 2, 2, 1, 2]);
console.log(set.toArray());
console.log("\nadd");
set.add(3);
console.log(set.toArray());
console.log("\ndelete");
set.delete(1);
console.log(set.toArray());
console.log("\nreducible");
console.log("length", set.length);
console.log("min", set.min());
console.log("max", set.max());
console.log("sum", set.sum());
console.log("average", set.average());
console.log("\nmap");
console.log(set.map(function (n) {
    return n + 1;
}));
console.log('\nhashable objects');
function Item(key, value) {
    this.key = key;
    this.value = value;
}
Item.prototype.hash = function () {
    return '' + this.key;
};
console.log("\niterate");
console.log(Iterator(set.iterate()).mapIterator(function (item) {
    return item.value;
}).toArray());
console.log(new Set([3, 2, 1]).concat([4, 5, 6]).toArray());
//console.log(new Set([1, 2, 3]).equals([1, 2, 3]));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0LWRlbW8uanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL2pzLXByb3RvdHlwZXMvcGFja2FnZXMvY29sbGVjdGlvbnMvZGVtby9zZXQtZGVtby5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsSUFBSSxHQUFHLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzVCLElBQUksUUFBUSxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUV0QyxPQUFPLENBQUMsR0FBRyxDQUFDLDRCQUE0QixDQUFDLENBQUM7QUFDMUMsSUFBSSxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM1QyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO0FBRTNCLE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDckIsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNYLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7QUFFM0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUN4QixHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQztBQUUzQixPQUFPLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBQzNCLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNsQyxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQztBQUM5QixPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQztBQUM5QixPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQztBQUM5QixPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxHQUFHLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQztBQUV0QyxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ3JCLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUM7SUFDM0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ2pCLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFHSixPQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDLENBQUM7QUFFbEMsU0FBUyxJQUFJLENBQUMsR0FBRyxFQUFFLEtBQUs7SUFDcEIsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUM7SUFDZixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztBQUN2QixDQUFDO0FBRUQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEdBQUc7SUFDbEIsT0FBTyxFQUFFLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQztBQUN6QixDQUFDLENBQUM7QUFFRixPQUFPLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQ3pCLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxVQUFVLElBQUk7SUFDMUQsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0FBQ3RCLENBQUMsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7QUFFZCxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFBO0FBRTNELG9EQUFvRCIsInNvdXJjZXNDb250ZW50IjpbIlxudmFyIFNldCA9IHJlcXVpcmUoXCIuLi9zZXRcIik7XG52YXIgSXRlcmF0b3IgPSByZXF1aXJlKFwiLi4vaXRlcmF0b3JcIik7XG5cbmNvbnNvbGUubG9nKFwiXFxuaWdub3JlIG5vbi11bmlxdWUgdmFsdWVzXCIpO1xudmFyIHNldCA9IG5ldyBTZXQoWzEsIDEsIDEsIDIsIDIsIDIsIDEsIDJdKTtcbmNvbnNvbGUubG9nKHNldC50b0FycmF5KCkpO1xuXG5jb25zb2xlLmxvZyhcIlxcbmFkZFwiKTtcbnNldC5hZGQoMyk7XG5jb25zb2xlLmxvZyhzZXQudG9BcnJheSgpKTtcblxuY29uc29sZS5sb2coXCJcXG5kZWxldGVcIik7XG5zZXQuZGVsZXRlKDEpO1xuY29uc29sZS5sb2coc2V0LnRvQXJyYXkoKSk7XG5cbmNvbnNvbGUubG9nKFwiXFxucmVkdWNpYmxlXCIpO1xuY29uc29sZS5sb2coXCJsZW5ndGhcIiwgc2V0Lmxlbmd0aCk7XG5jb25zb2xlLmxvZyhcIm1pblwiLCBzZXQubWluKCkpO1xuY29uc29sZS5sb2coXCJtYXhcIiwgc2V0Lm1heCgpKTtcbmNvbnNvbGUubG9nKFwic3VtXCIsIHNldC5zdW0oKSk7XG5jb25zb2xlLmxvZyhcImF2ZXJhZ2VcIiwgc2V0LmF2ZXJhZ2UoKSk7XG5cbmNvbnNvbGUubG9nKFwiXFxubWFwXCIpO1xuY29uc29sZS5sb2coc2V0Lm1hcChmdW5jdGlvbiAobikge1xuICAgIHJldHVybiBuICsgMTtcbn0pKTtcblxuXG5jb25zb2xlLmxvZygnXFxuaGFzaGFibGUgb2JqZWN0cycpO1xuXG5mdW5jdGlvbiBJdGVtKGtleSwgdmFsdWUpIHtcbiAgICB0aGlzLmtleSA9IGtleTtcbiAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG59XG5cbkl0ZW0ucHJvdG90eXBlLmhhc2ggPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuICcnICsgdGhpcy5rZXk7XG59O1xuXG5jb25zb2xlLmxvZyhcIlxcbml0ZXJhdGVcIik7XG5jb25zb2xlLmxvZyhJdGVyYXRvcihzZXQuaXRlcmF0ZSgpKS5tYXBJdGVyYXRvcihmdW5jdGlvbiAoaXRlbSkge1xuICAgIHJldHVybiBpdGVtLnZhbHVlO1xufSkudG9BcnJheSgpKTtcblxuY29uc29sZS5sb2cobmV3IFNldChbMywgMiwgMV0pLmNvbmNhdChbNCwgNSwgNl0pLnRvQXJyYXkoKSlcblxuLy9jb25zb2xlLmxvZyhuZXcgU2V0KFsxLCAyLCAzXSkuZXF1YWxzKFsxLCAyLCAzXSkpO1xuXG4iXX0=